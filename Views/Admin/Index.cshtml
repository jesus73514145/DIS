@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Textil";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<link rel="stylesheet" href="~/css/index.css" />
<link rel="stylesheet" href="~/css/boton.css" />

<style>
    .custom-alert {
        font-size: 2.0em;
        /* Aumenta el tamaño del texto */
        padding: 20px;
        /* Aumenta el relleno interno */
        border-radius: 5px;
        /* Redondea los bordes de la alerta */
    }
</style>
@{
    @*ApplicationUser myidentity = null;
IList<string> roles = new List<string>();

if (User.Identity.IsAuthenticated)
{
myidentity = await UserManager.GetUserAsync(User);
if (myidentity != null)
{
roles = await UserManager.GetRolesAsync(myidentity);
}
}*@
    ApplicationUser myidentity = null;
    string rolId = null;

    if (User.Identity.IsAuthenticated)
    {
        myidentity = await UserManager.GetUserAsync(User);
        if (myidentity != null)
        {
            rolId = myidentity.RolId; // Obtiene el RolId directamente del usuario
        }
    }
}


<body>
    <section class="content bienvenida" style="min-height: 90vh; ">
        @if (SignInManager.IsSignedIn(User))
        {
            var userId = UserManager.GetUserId(User); // Obtén el ID del usuario autenticado
            var user = await UserManager.FindByIdAsync(userId); // Busca el usuario en la base de datos por ID

            @* Verifica si el usuario es Admin o no tiene rol asignado *@
            @if (rolId == "1") // Si el RolId es "Admin"
            {
                // Si el usuario está autenticado, muestra un mensaje de bienvenida personalizado
                <h2 class="title">
                    <span class="wellcome">¡Bienvenido, Administrador @user.Nombres @user.ApellidoPat!</span>
                </h2>
                <p class="codigo">COD. DE USUARIO: @user.NumeroDocumento</p>
                <section class="Botones">
                    <div class="boton-container">
                        <a href="/Textil/Admin/ListUsuGer" class="boton">LISTA DE USUARIOS GERENTE</a>
                        <a href="/Textil/Admin/AgreUsu" class="boton">AGREGAR USUARIOS</a>
                        <a href="/Textil/Admin/ListUsuSup" class="boton">LISTA DE USUARIOS SUPERVISOR</a>
                    </div>
                </section>

            }
        }
        else
        {
            // Si el usuario no está autenticado, muestra un mensaje de bienvenida genérico
            <h1 class="title">
                <span class="wellcome">Bienvenido</span>
            </h1>
        }
        <br><br><br>

        @if (TempData["MessageDeRespuesta"] != null)
        {
            var mensaje = TempData["MessageDeRespuesta"].ToString();
            var partesMensaje = mensaje.Split('|');

            // Verificar que el mensaje contiene al menos dos partes
            if (partesMensaje.Length == 2)
            {
                var tipoMensaje = partesMensaje[0]; // "success" o "error"
                var textoMensaje = partesMensaje[1]; // El texto del mensaje

                var claseAlerta = tipoMensaje == "success" ? "alert-success" : "alert-danger";

                <div class="alert @claseAlerta" id="MensajesVerdeRojo">
                    @textoMensaje
                </div>
            }
            else
            {
                // Si no hay dos partes, mostrar el mensaje directamente
                <div class="alert alert-warning" id="MensajesVerdeRojo">
                    @mensaje
                </div>
            }
        }
    </section>


</body>