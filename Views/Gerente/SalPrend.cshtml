@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "SALIDA DE PRENDAS";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<link rel="stylesheet" href="~/css/index.css" />
<link rel="stylesheet" href="~/css/body.css" />
<link rel="stylesheet" href="~/css/boton.css" />

@if (TempData["MessageDeRespuesta"] != null)
{
    var mensaje = TempData["MessageDeRespuesta"].ToString();
    var partesMensaje = mensaje.Split('|');

    // Verificar que el mensaje contiene al menos dos partes
    if (partesMensaje.Length == 2)
    {
        var tipoMensaje = partesMensaje[0]; // "success" o "error"
        var textoMensaje = partesMensaje[1]; // El texto del mensaje

        var claseAlerta = tipoMensaje == "success" ? "alert-success" : "alert-danger";

        <div class="alert @claseAlerta" id="MensajesVerdeRojo">
            @textoMensaje
        </div>
    }
    else
    {
        // Si no hay dos partes, mostrar el mensaje directamente
        <div class="alert alert-warning" id="MensajesVerdeRojo">
            @mensaje
        </div>
    }
}
<style>
      
</style>
@{
    ApplicationUser myidentity = null;
    IList<string> roles = new List<string>();

    if (User.Identity.IsAuthenticated)
    {
        myidentity = await UserManager.GetUserAsync(User);
        if (myidentity != null)
        {
            roles = await UserManager.GetRolesAsync(myidentity);
        }
    }
}


<body>
    <section class="content bienvenida"  style="min-height: 90vh; ">
        <h2 class="title">
            <span class="wellcome">SALIDA DE PRENDAS</span>
        </h2>
        
    </section>

</body>